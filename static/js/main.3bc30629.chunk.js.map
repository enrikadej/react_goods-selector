{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","goodsInCourt","goods","length","slice","join","chooseProducts","product","includes","setState","filter","prod","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAe,CACbC,aAAc,CAAC,QAFnB,EAQEC,aAAe,SAACC,GACd,IAAQF,EAA6C,EAAKD,MAAlDC,aAER,OAAqB,IAAjBE,EAAMC,OACD,oBAGY,IAAjBD,EAAMC,OACF,GAAN,OAAUH,EAAa,GAAvB,gBAGI,GAAN,OAAUE,EAAME,MAAM,GAAI,GAAGC,KAAK,KAAlC,gBAA8CH,EAAMA,EAAMC,OAAS,KAnBvE,EAsBEG,eAAiB,SAACC,GACqC,EAAKR,MAAlDC,aAESQ,SAASD,GAKxB,EAAKE,UAAS,SAACV,GAAD,MAAY,CACxBC,aAAcD,EAAMC,aAAaU,QAAO,SAACC,GAAD,OACtCA,IAASJ,SAIb,EAAKE,UAAS,SAACV,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BO,SArC9C,4CA0CE,WAAU,IAAD,OACCP,EAA6CY,KAAKb,MAAlDC,aAER,OACE,sBAAKa,UAAU,MAAf,UACE,6BAAKD,KAAKX,aAAaD,KACvB,wBACEc,KAAK,SACLC,QAAS,WACP,EAAKN,SAAS,CACZT,aAAc,MAJpB,mBAUA,6BACGH,EAAgBmB,KAAI,SAAAC,GAAI,OACvB,qCACE,6BAAKA,IACL,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKT,eAAeW,IAHxB,SAMGjB,EAAaQ,SAASS,GACnB,SACA,0BAtEpB,GAAyBC,IAAMC,WChB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3bc30629.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  // methods for adding & removing elements from an array return array\n  // filter,slice,map,concat\n\n  goodsInCourt = (goods: string[] | []) => {\n    const { selectedGood }: { selectedGood: string[] } = this.state;\n\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return `${selectedGood[0]} is selected`;\n    }\n\n    return `${goods.slice(0, -1).join(',')} and ${goods[goods.length - 1]}`;\n  };\n\n  chooseProducts = (product: string) => {\n    const { selectedGood }: { selectedGood: string[] } = this.state;\n\n    if (selectedGood.includes(product)) {\n      // const index = selectedGood.indexOf(product);\n\n      // ARRAY WITHOUT REMOVED ELEMENT\n\n      this.setState((state) => ({\n        selectedGood: state.selectedGood.filter((prod: string) => (\n          prod !== product\n        )),\n      }));\n    } else {\n      this.setState((state) => ({\n        selectedGood: [...state.selectedGood, product],\n      }));\n    }\n  };\n\n  render() {\n    const { selectedGood }: { selectedGood: string[] } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.goodsInCourt(selectedGood)}</h1>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              selectedGood: [],\n            });\n          }}\n        >\n          Clear\n        </button>\n        <ul>\n          {goodsFromServer.map(good => (\n            <>\n              <li>{good}</li>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.chooseProducts(good);\n                }}\n              >\n                {selectedGood.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n// import 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}